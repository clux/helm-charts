---
# Source: promstack/charts/kube-prometheus-stack/templates/prometheus/prometheus.yaml
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: promstack
  namespace: monitoring
  labels:
    app: promstack-prometheus
    
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: promstack
    app.kubernetes.io/version: "62.3.1"
    app.kubernetes.io/part-of: promstack
    chart: kube-prometheus-stack-62.3.1
    release: "promstack"
    heritage: "Helm"
spec:
  automountServiceAccountToken: true
  alerting:
    alertmanagers:
      - namespace: monitoring
        name: promstack-alertmanager
        port: http-web
        pathPrefix: "/"
        apiVersion: v2
  image: "quay.io/prometheus/prometheus:v2.54.1"
  version: v2.54.1
  prometheusExternalLabelName: ""
  replicaExternalLabelName: ""
  externalUrl: "http://prometheus.clux.dev"
  paused: false
  replicas: 1
  shards: 1
  logLevel:  debug
  logFormat:  logfmt
  listenLocal: false
  enableAdminAPI: true
  enableFeatures:
  - exemplar-storage
  scrapeInterval: 60s
  evaluationInterval: 60s
  retention: "30d"
  tsdb:
    outOfOrderTimeWindow: 0s
  walCompression: true
  routePrefix: "/"
  serviceAccountName: promstack-prometheus
  serviceMonitorSelector: {}
  serviceMonitorNamespaceSelector: {}
  podMonitorSelector: {}
  podMonitorNamespaceSelector: {}
  probeSelector:
    matchLabels:
      release: "promstack"

  probeNamespaceSelector: {}
  securityContext:
    fsGroup: 2000
    runAsGroup: 2000
    runAsNonRoot: true
    runAsUser: 1000
    seccompProfile:
      type: RuntimeDefault
  ruleNamespaceSelector: {}
  ruleSelector: {}
  scrapeConfigSelector:
    matchLabels:
      release: "promstack"

  scrapeConfigNamespaceSelector: {}
  storage:
    volumeClaimTemplate:
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
        storageClassName: local-path
  portName: http-web
  hostNetwork: false
